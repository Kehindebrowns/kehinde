{"ast":null,"code":"import _regeneratorRuntime from\"/workspace/dtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/workspace/dtube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{Component}from'react';import DTube from'../abis/DTube.json';import Navbar from'./Navbar';import Main from'./Main';import Footer from'./Footer';import Web3 from'web3';import'./App.css';//Declare IPFS\nvar ipfsClient=require('ipfs-http-client');var ipfs=ipfsClient({host:'ipfs.infura.io',port:5001,protocol:'https'});class App extends Component{componentWillMount(){var _this=this;return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _this.loadWeb3();case 2:_context.next=4;return _this.loadBlockchainData();case 4:case\"end\":return _context.stop();}}},_callee);}))();}loadWeb3(){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.ethereum){_context2.next=6;break;}window.web3=new Web3(window.ethereum);_context2.next=4;return window.ethereum.enable();case 4:_context2.next=7;break;case 6:if(window.web3){window.web3=new Web3(window.web3.currentProvider);}else{window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');}case 7:case\"end\":return _context2.stop();}}},_callee2);}))();}loadBlockchainData(){var _this2=this;return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var web3,accounts,networkId,networkData,dtube,videosCount,i,video,latest;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:web3=window.web3;// Load account\n_context3.next=3;return web3.eth.getAccounts();case 3:accounts=_context3.sent;_this2.setState({account:accounts[0]});// Network ID\n_context3.next=7;return web3.eth.net.getId();case 7:networkId=_context3.sent;networkData=DTube.networks[networkId];if(!networkData){_context3.next=32;break;}dtube=new web3.eth.Contract(DTube.abi,networkData.address);_this2.setState({dtube});_context3.next=14;return dtube.methods.videoCount().call();case 14:videosCount=_context3.sent;_this2.setState({videosCount});// Load videos, sort by newest\ni=videosCount;case 17:if(!(i>=1)){_context3.next=25;break;}_context3.next=20;return dtube.methods.videos(i).call();case 20:video=_context3.sent;_this2.setState({videos:[..._this2.state.videos,video]});case 22:i--;_context3.next=17;break;case 25:_context3.next=27;return dtube.methods.videos(videosCount).call();case 27:latest=_context3.sent;_this2.setState({currentHash:latest.hash,currentTitle:latest.title});_this2.setState({loading:false});_context3.next=33;break;case 32:window.alert('DTube contract not deployed to detected network.');case 33:case\"end\":return _context3.stop();}}},_callee3);}))();}constructor(props){super(props);this.captureFile=event=>{event.preventDefault();var file=event.target.files[0];var reader=new window.FileReader();reader.readAsArrayBuffer(file);reader.onloadend=()=>{this.setState({buffer:Buffer(reader.result)});console.log('buffer',this.state.buffer);};};this.uploadVideo=title=>{console.log(\"Submitting file to IPFS...\");//adding file to the IPFS\nipfs.add(this.state.buffer,(error,result)=>{console.log('IPFS result',result);if(error){console.error(error);return;}this.setState({loading:true});this.state.dtube.methods.uploadVideo(result[0].hash,title).send({from:this.state.account}).on('transactionHash',hash=>{this.setState({loading:false});});});};this.changeVideo=(hash,title)=>{this.setState({'currentHash':hash});this.setState({'currentTitle':title});};this.state={buffer:null,account:'',dtube:null,videos:[],loading:true,currentHash:null,currentTitle:null};this.uploadVideo=this.uploadVideo.bind(this);this.captureFile=this.captureFile.bind(this);this.changeVideo=this.changeVideo.bind(this);}render(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Navbar,{account:this.state.account}),this.state.loading?/*#__PURE__*/React.createElement(\"div\",{id:\"loader\",className:\"text-center mt-5\"},/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\")):/*#__PURE__*/React.createElement(Main,{videos:this.state.videos,uploadVideo:this.uploadVideo,captureFile:this.captureFile,changeVideo:this.changeVideo,currentHash:this.state.currentHash,currentTitle:this.state.currentTitle}),/*#__PURE__*/React.createElement(Footer,null));}}export default App;","map":{"version":3,"sources":["/workspace/dtube/src/components/App.js"],"names":["React","Component","DTube","Navbar","Main","Footer","Web3","ipfsClient","require","ipfs","host","port","protocol","App","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","dtube","Contract","abi","address","methods","videoCount","call","videosCount","i","videos","video","state","latest","currentHash","hash","currentTitle","title","loading","constructor","props","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","console","log","uploadVideo","add","error","send","from","on","changeVideo","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DTube from '../abis/DTube.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Footer from './Footer'\nimport Web3 from 'web3';\nimport './App.css';\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' })\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = DTube.networks[networkId]\n    if(networkData) {\n      const dtube = new web3.eth.Contract(DTube.abi, networkData.address)\n      this.setState({ dtube })\n      const videosCount = await dtube.methods.videoCount().call()\n      this.setState({ videosCount })\n      // Load videos, sort by newest\n      for (var i=videosCount; i>=1; i--) {\n        const video = await dtube.methods.videos(i).call()\n        this.setState({\n          videos: [...this.state.videos, video]\n        })\n      }\n      //Set latest video with title to view as default \n      const latest = await dtube.methods.videos(videosCount).call()\n      this.setState({\n        currentHash: latest.hash,\n        currentTitle: latest.title\n      })\n      this.setState({ loading: false})\n    } else {\n      window.alert('DTube contract not deployed to detected network.')\n    }\n  }\n\n  captureFile = event => {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n\n  uploadVideo = title => {\n    console.log(\"Submitting file to IPFS...\")\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('IPFS result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n\n      this.setState({ loading: true })\n      this.state.dtube.methods.uploadVideo(result[0].hash, title).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n    })\n  }\n\n  changeVideo = (hash, title) => {\n    this.setState({'currentHash': hash});\n    this.setState({'currentTitle': title});\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      buffer: null,\n      account: '',\n      dtube: null,\n      videos: [],\n      loading: true,\n      currentHash: null,\n      currentTitle: null\n    }\n\n    this.uploadVideo = this.uploadVideo.bind(this)\n    this.captureFile = this.captureFile.bind(this)\n    this.changeVideo = this.changeVideo.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              videos={this.state.videos}\n              uploadVideo={this.uploadVideo}\n              captureFile={this.captureFile}\n              changeVideo={this.changeVideo}\n              currentHash={this.state.currentHash}\n              currentTitle={this.state.currentTitle}\n            />\n        }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}