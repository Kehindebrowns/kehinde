{"ast":null,"code":"'use strict';\n\nvar _require = require('readable-stream'),\n    Duplex = _require.Duplex;\n\nclass PullDuplexStream extends Duplex {\n  constructor(source, sink, options) {\n    super(options);\n    this.source = source;\n    this.drainingSource = false;\n    this.sink = sink;\n    this.input = [];\n    this.writeCallbacks = [];\n    this.internalSourceCallbacks = [];\n\n    if (this.sink) {\n      this.sink(this._internalSource.bind(this));\n    }\n  }\n\n  drainPull() {\n    var self = this;\n    this.drainingSource = true;\n    this.source(null, function next(end, data) {\n      if (end instanceof Error) {\n        return self.emit('error', end);\n      }\n\n      if (end) {\n        return self.push(null);\n      }\n\n      if (self.push(data)) {\n        self.source(null, next);\n      } else {\n        self.drainingSource = false;\n      }\n    });\n  }\n\n  _read() {\n    if (this.source && !this.drainingSource) {\n      this.drainPull();\n    }\n  }\n\n  _write(chunk, encoding, callback) {\n    if (this.internalSourceCallbacks.length > 0) {\n      this.internalSourceCallbacks.shift()(null, chunk);\n      callback();\n    } else {\n      this.input.push(chunk);\n      this.writeCallbacks.push(callback);\n    }\n  }\n\n  _internalSource(end, cb) {\n    if (end) {\n      if (this.writeCallbacks.length > 0) {\n        // call write callback with error\n        this.writeCallbacks.shift()(end instanceof Error ? end : new Error('Aborted'));\n      }\n\n      return cb(end);\n    }\n\n    if (this.input.length > 0) {\n      cb(null, this.input.shift());\n      this.writeCallbacks.shift()();\n    } else {\n      this.internalSourceCallbacks.push(cb);\n    }\n  }\n\n  _final(callback) {\n    // end the internal source\n    if (this.internalSourceCallbacks.length > 0) {\n      this.internalSourceCallbacks.shift()(true);\n    }\n\n    callback();\n  }\n\n  _destroy(err, cb) {\n    // abort the source\n    if (!this._readableState.ended && this.source) {\n      this.source(true, () => {// do nothing\n      });\n    } // propagate error to sink\n\n\n    if (this.internalSourceCallbacks.length > 0) {\n      this.internalSourceCallbacks.shift()(err);\n    }\n\n    cb(err);\n  }\n\n}\n\nfunction wrapper(source, sink, options) {\n  if (source && typeof source === 'object') {\n    source = source.source;\n    sink = source.sink;\n  }\n\n  return new PullDuplexStream(source, sink, Object.assign({\n    readableObjectMode: true,\n    writableObjectMode: true\n  }, options));\n}\n\nmodule.exports = {\n  duplex: wrapper,\n  readable: (source, options) => wrapper(source, null, options),\n  writeable: (sink, options) => wrapper(null, sink, options)\n};","map":{"version":3,"sources":["/workspace/dtube/node_modules/pull-to-stream/index.js"],"names":["require","Duplex","PullDuplexStream","constructor","source","sink","options","drainingSource","input","writeCallbacks","internalSourceCallbacks","_internalSource","bind","drainPull","self","next","end","data","Error","emit","push","_read","_write","chunk","encoding","callback","length","shift","cb","_final","_destroy","err","_readableState","ended","wrapper","Object","assign","readableObjectMode","writableObjectMode","module","exports","duplex","readable","writeable"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { Duplex } = require('readable-stream');\n\nclass PullDuplexStream extends Duplex {\n    constructor(source, sink, options) {\n        super(options);\n        this.source = source;\n        this.drainingSource = false;\n        this.sink = sink;\n        this.input = [];\n        this.writeCallbacks = [];\n        this.internalSourceCallbacks = [];\n        if (this.sink) {\n            this.sink(this._internalSource.bind(this));\n        }\n    }\n\n    drainPull() {\n        const self = this;\n\n        this.drainingSource = true;\n        this.source(null, function next(end, data) {\n            if (end instanceof Error) {\n                return self.emit('error', end);\n            }\n\n            if (end) {\n                return self.push(null);\n            }\n\n            if (self.push(data)) {\n                self.source(null, next);\n            } else {\n                self.drainingSource = false;\n            }\n        });\n    }\n\n    _read() {\n        if (this.source && !this.drainingSource) {\n            this.drainPull();\n        }\n    }\n\n    _write(chunk, encoding, callback) {\n        if (this.internalSourceCallbacks.length > 0) {\n            this.internalSourceCallbacks.shift()(null, chunk);\n            callback();\n        } else {\n            this.input.push(chunk);\n            this.writeCallbacks.push(callback);\n        }\n    }\n\n    _internalSource(end, cb) {\n        if (end) {\n            if (this.writeCallbacks.length > 0) {\n                // call write callback with error\n                this.writeCallbacks.shift()(\n                    end instanceof Error ? end : new Error('Aborted')\n                );\n            }\n\n            return cb(end);\n        }\n\n        if (this.input.length > 0) {\n            cb(null, this.input.shift());\n            this.writeCallbacks.shift()();\n        } else {\n            this.internalSourceCallbacks.push(cb);\n        }\n    }\n\n    _final(callback) {\n        // end the internal source\n        if (this.internalSourceCallbacks.length > 0) {\n            this.internalSourceCallbacks.shift()(true);\n        }\n        callback();\n    }\n    _destroy(err, cb) {\n        // abort the source\n        if (!this._readableState.ended && this.source) {\n            this.source(true, () => {\n                // do nothing\n            });\n        }\n\n        // propagate error to sink\n        if (this.internalSourceCallbacks.length > 0) {\n            this.internalSourceCallbacks.shift()(err);\n        }\n\n        cb(err);\n    }\n}\n\nfunction wrapper(source, sink, options) {\n    if (source && typeof source === 'object') {\n        source = source.source;\n        sink = source.sink;\n    }\n\n    return new PullDuplexStream(\n        source,\n        sink,\n        Object.assign(\n            {\n                readableObjectMode: true,\n                writableObjectMode: true\n            },\n            options\n        )\n    );\n}\n\nmodule.exports = {\n    duplex: wrapper,\n    readable: (source, options) => wrapper(source, null, options),\n    writeable: (sink, options) => wrapper(null, sink, options)\n};\n"]},"metadata":{},"sourceType":"script"}