{"ast":null,"code":"'use strict';\n\nvar pull = require('pull-stream');\n\nvar toPull = require('stream-to-pull-stream');\n\nvar deferred = require('pull-defer');\n\nvar moduleConfig = require('../utils/module-config');\n\nvar _require = require('./refs'),\n    checkArgs = _require.checkArgs,\n    normalizeOpts = _require.normalizeOpts;\n\nmodule.exports = send => {\n  send = moduleConfig(send);\n  return (args, opts) => {\n    opts = normalizeOpts(opts);\n    var p = deferred.source();\n\n    try {\n      args = checkArgs(args);\n    } catch (err) {\n      return p.end(err);\n    }\n\n    send({\n      path: 'refs',\n      args,\n      qs: opts\n    }, (err, stream) => {\n      if (err) {\n        return p.resolve(pull.error(err));\n      }\n\n      p.resolve(pull(toPull.source(stream), pull.map(r => ({\n        ref: r.Ref,\n        err: r.Err\n      }))));\n    });\n    return p;\n  };\n};","map":{"version":3,"sources":["/workspace/dtube/node_modules/ipfs-http-client/src/files-regular/refs-pull-stream.js"],"names":["pull","require","toPull","deferred","moduleConfig","checkArgs","normalizeOpts","module","exports","send","args","opts","p","source","err","end","path","qs","stream","resolve","error","map","r","ref","Ref","Err"],"mappings":"AAAA;;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAAtB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;eACqCA,OAAO,CAAC,QAAD,C;IAApCI,S,YAAAA,S;IAAWC,a,YAAAA,a;;AAEnBC,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzBA,EAAAA,IAAI,GAAGL,YAAY,CAACK,IAAD,CAAnB;AAEA,SAAO,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrBA,IAAAA,IAAI,GAAGL,aAAa,CAACK,IAAD,CAApB;AAEA,QAAMC,CAAC,GAAGT,QAAQ,CAACU,MAAT,EAAV;;AAEA,QAAI;AACFH,MAAAA,IAAI,GAAGL,SAAS,CAACK,IAAD,CAAhB;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,aAAOF,CAAC,CAACG,GAAF,CAAMD,GAAN,CAAP;AACD;;AAEDL,IAAAA,IAAI,CAAC;AAAEO,MAAAA,IAAI,EAAE,MAAR;AAAgBN,MAAAA,IAAhB;AAAsBO,MAAAA,EAAE,EAAEN;AAA1B,KAAD,EAAmC,CAACG,GAAD,EAAMI,MAAN,KAAiB;AACtD,UAAIJ,GAAJ,EAAS;AAAE,eAAOF,CAAC,CAACO,OAAF,CAAUnB,IAAI,CAACoB,KAAL,CAAWN,GAAX,CAAV,CAAP;AAAmC;;AAE9CF,MAAAA,CAAC,CAACO,OAAF,CAAUnB,IAAI,CACZE,MAAM,CAACW,MAAP,CAAcK,MAAd,CADY,EAEZlB,IAAI,CAACqB,GAAL,CAASC,CAAC,KAAK;AAAEC,QAAAA,GAAG,EAAED,CAAC,CAACE,GAAT;AAAcV,QAAAA,GAAG,EAAEQ,CAAC,CAACG;AAArB,OAAL,CAAV,CAFY,CAAd;AAID,KAPG,CAAJ;AASA,WAAOb,CAAP;AACD,GArBD;AAsBD,CAzBD","sourcesContent":["'use strict'\n\nconst pull = require('pull-stream')\nconst toPull = require('stream-to-pull-stream')\nconst deferred = require('pull-defer')\nconst moduleConfig = require('../utils/module-config')\nconst { checkArgs, normalizeOpts } = require('./refs')\n\nmodule.exports = (send) => {\n  send = moduleConfig(send)\n\n  return (args, opts) => {\n    opts = normalizeOpts(opts)\n\n    const p = deferred.source()\n\n    try {\n      args = checkArgs(args)\n    } catch (err) {\n      return p.end(err)\n    }\n\n    send({ path: 'refs', args, qs: opts }, (err, stream) => {\n      if (err) { return p.resolve(pull.error(err)) }\n\n      p.resolve(pull(\n        toPull.source(stream),\n        pull.map(r => ({ ref: r.Ref, err: r.Err }))\n      ))\n    })\n\n    return p\n  }\n}\n"]},"metadata":{},"sourceType":"script"}